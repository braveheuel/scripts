#!/usr/bin/env bash
#

HOSTLIST_DIR="$HOME/.config/term-starter"
ROFI_CALL="rofi -dmenu"

term_to_use="roxterm"

function get_hostlist {
	for HOST in `ls $HOSTLIST_DIR`
	do
		ret_val+="${HOST}\n"
	done
	eval "$1='$ret_val'"
}

function call_command {
	short_host=$1
	host_config_file="$HOSTLIST_DIR/$1"

	if [ -e $host_config_file ];
	then
		eval `cat $host_config_file`
	else
		touch $host_config_file
	fi

	if [ -z "$address" ];
	then
		address=`echo $short_host | sed 's/.*\@//'`
	fi

	# Test if terminal to use is existent
	hash $term_to_use
	rv=$?
	if [ $rv -ne 0 ];
	then
		echo "$term_to_use not found, using xterm"
		term_to_use="xterm"
	fi

	case $muxer in
		screen)
			cmd="screen -RD"
			;;
		tmux)
			cmd="tmux -2 new-session -A -s terminal"
			;;
		*)
			cmd=""
	esac

	ssh_args="-t"

	if [ "$x11_forward" = "no" ];
	then
		ssh_args="$ssh_args"
	else
		ssh_args="$ssh_args -X"
	fi

	if [ "x$short_host" = "x" -o "$short_host" = "`hostname -s`" ] ;
	then
		issue_terminal "`hostname -s`" "$cmd"
	else 
		ping -c 1 "$address"
		if [ $? -eq 0 ];
		then
			issue_terminal "$short_host" "ssh $ssh_args \"$short_host\" \"$cmd\""
		else
			notify-send --icon=process-stop "$short_host" "$address is not reachable!"
		fi
	fi
}


issue_terminal() {
	terminal_title="$1"
	cmd="$2"
	case $term_to_use in
		roxterm)
			$term_to_use --hide-menubar --title "$terminal_title" -e "$cmd"
			;;
		*)
			xterm -title "$terminal_title" -e "$cmd"
			;;
	esac	
}

main() {
	get_hostlist HOSTLIST

	MENU_LIST="${HOSTLIST}----\nEdit host\nRemove host"

	SELECTION=`printf "$MENU_LIST" | $ROFI_CALL -p terminal-starter: `

	case "$SELECTION" in
		"Remove host")
			REMOVEHOST=`printf "$HOSTLIST" | $ROFI_CALL -p 'remove host'`
			if [ ! -z "$REMOVEHOST" ];
			then
				xmessage -buttons yes:0,no:1 "Really remove $REMOVEHOST?"
				rv=$?
				if [ $rv -eq 0 ];
				then
					rm "$HOSTLIST_DIR/$REMOVEHOST"
				fi
			fi
			;;
		"Edit host")
			EDITHOST=`printf "$HOSTLIST" | $ROFI_CALL -p edit host`
			if [ ! -z "$EDITHOST" ];
			then
				issue_terminal "Edit Terminal" "vim '$HOSTLIST_DIR/$EDITHOST'"
			fi
			;;
		"----")
			exit 0
			;;
		"")
			exit 0
			;;
		*)
			call_command $SELECTION
			;;
	esac
}

if [ "x$1" = "x" ];
then
	main
else
	call_command $1
fi
